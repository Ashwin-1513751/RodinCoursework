machine m2_motors
refines m1_shafts
sees
	cabin_context 
	shafts_context
	motors_context
variables
	cabin
	floor
    inBetweenFloorStatus
    shaft
    floorShaft
    motor
invariants
	@typeof_motor: motor ∈ cabin → MOTOR_STATUS //REQ 8 Each cabin is driven by a motor which can be either ON or OFF
    @motor_shaft: ∀ c · c ∈ cabin ∧ c ∈ dom(floor) ⇒ c ∈ dom(motor)
events
	event INITIALISATION extends INITIALISATION
	then
		@init_motor: motor ≔ ∅
	end
	
	event CabinLeavesFloorGoingUp extends CabinLeavesFloorGoingUp
	any m
	where
		//REQ 9 A cabin moves from one floor to another if its motor is ON
		//SAF 12 A cabin’s motor must be ON when the cabin is in between two floors.
		@grd10: motor(c) = MOTOR_ON 
		@grd11: c ↦ m  ∈ motor
	end
	
	event CabinReachesFloorGoingUp extends CabinReachesFloorGoingUp
	end	
	
	event  CabinLeavesFloorGoingDown extends  CabinLeavesFloorGoingDown
	any m
	where
		//REQ 9 A cabin moves from one floor to another if its motor is ON
		//SAF 12 A cabin’s motor must be ON when the cabin is in between two floors.
		@grd10: motor(c) = MOTOR_ON 
		@grd11: c ↦ m  ∈ motor
	end
	
	event CabinReachesFloorGoingDown  extends CabinReachesFloorGoingDown 
	end
	
	event AddCabin extends AddCabin
	where
		@grd4: c ∉ dom(motor)
		@grd5: c ∉ dom(inBetweenFloorStatus) 
		@grd: c ∉ dom(floor)
	then
		@act7: motor ≔ motor ∪ {c ↦ MOTOR_ON}
	end
	
	event RemoveCabin extends RemoveCabin
	where
		@grd8: c ∈ dom (motor)
		@grd9: motor(c) = MOTOR_ON
	then
		@act7: motor ≔ {c} ⩤ motor
	end
	
	event CabinUpToDown extends CabinUpToDown
	any m 
	where
		@grd8: motor(c) = MOTOR_ON
		@grd9: c ↦ m  ∈ motor
	end
		
	event CabinDownToUp extends CabinDownToUp
	any m
	where
		@grd8: motor(c) = MOTOR_ON
		@grd9: c ↦ m  ∈ motor
	end
	
	event MotorStarts
	any c m 
	where
		@grd1: c ∈ cabin
		@grd2: motor(c) = MOTOR_OFF
		@grd3: inBetweenFloorStatus (c) = ATFLOOR
		@grd4: c ↦ m  ∈ motor
	then
		@act1: motor(c) ≔ MOTOR_ON
	end
	
	event MotorStops
	any c m
	where 
		@grd1: c ∈ cabin
		@grd2: motor(c) = MOTOR_ON
		@grd3: inBetweenFloorStatus (c) = ATFLOOR
		@grd4: c ↦ m  ∈ motor
		
	then 
		@act1: motor(c) ≔ MOTOR_OFF
	end
	
end