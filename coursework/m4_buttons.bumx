machine m4_buttons
refines m3_doors
sees
	cabin_context 
	shafts_context
	motors_context
	doors_context
	buttons_context
variables
	cabin
	floor
    inBetweenFloorStatus
    shaft
    floorShaft
    motor
    door
    upButtons
    downButtons
    floorButtons
invariants
	// set of floors requested by the user
	@typeof_up_buttons: upButtons ⊆ 0‥TOP_FLOOR − 1 //REQ 16 no up button on top floor
	@typeof_down_buttons: downButtons ⊆ 1‥TOP_FLOOR //REQ 15 no down button on bottom floor
	@typeof_floor_buttons: floorButtons ∈ cabin ↔ 0‥TOP_FLOOR //REQ 17 floor button pressed inside of a cabin
	
events
	event INITIALISATION extends INITIALISATION
	then
		@init_up_buttons: upButtons ≔ ∅
		@init_down_buttons: downButtons ≔ ∅
		@init_floor_buttons: floorButtons ≔ ∅
	end
	
	event CabinLeavesFloorGoingUp extends CabinLeavesFloorGoingUp
	end
	
	event CabinReachesFloorGoingUp extends CabinReachesFloorGoingUp
	end	
	
	event CabinLeavesFloorGoingDown extends  CabinLeavesFloorGoingDown
	end
	
	event CabinReachesFloorGoingDown  extends CabinReachesFloorGoingDown 
	end
	
	event AddCabin extends AddCabin
    end
	
	event RemoveCabin extends RemoveCabin
	then 
		@act9: floorButtons ≔ {c} ⩤ floorButtons
	end
	
	event CabinUpToDown extends CabinUpToDown
	where 
		@grd12: floor(c) ∉ upButtons ∪ floorButtons[{c}]//the current floor the cabin is on is not requested 
		@grd13:floor(c) ∈ downButtons //there are requests to go down from the current floor 
	end
	
	event CabinUpToDownInCabin extends CabinUpToDown
	where 
		@grd12: floor(c) ∉ upButtons ∪ floorButtons[{c}]//the current floor the cabin is on is not requested 
		@grd13:  floorButtons[{c}] ∖ {floor(c)} ⊆ 0‥TOP_FLOOR −1  //a lower floor is requested from inside the cabin  //a lower floor is requested from inside the cabin
	end
		
	event CabinDownToUp extends CabinDownToUp
	where 
		@grd12: floor(c) ∉ downButtons ∪ floorButtons[{c}]//the current floor the cabin is on is not requested 
		@grd13: (floor(c) ∈ upButtons) //there are requests to go up from the current floor 
	end
	
	
	event CabinDownToUpInCabin extends CabinDownToUp
	where 
		@grd12: floor(c) ∉ downButtons ∪ floorButtons[{c}]//the current floor the cabin is on is not requested 
		@grd13: floorButtons[{c}] ∖ {floor(c)} ⊆ 1‥TOP_FLOOR   // a higher floor is requested from inside the cabin	 
	end
	
	event MotorStarts extends MotorStarts
	where
		// motor will start if button is requested from either inside the cabin out outside the cabin on a floor 
		@grd8: shaft(c) = SHAFT_UP ⇒  floor(c) + 1 ‥ TOP_FLOOR ∩ (floorButtons[{c}] ∪ upButtons ∪ downButtons) ≠ ∅ 
    	@grd9: shaft(c) = SHAFT_DOWN ⇒ 0 ‥ floor(c) − 1 ∩ (floorButtons[{c}] ∪ upButtons ∪ downButtons) ≠ ∅
	end

	event MotorStopsOnRequest extends MotorStops
	where     //stops where floor is requested
		@grd7: shaft(c) = SHAFT_UP ⇒ floor(c) ∈ floorButtons[{c}] ∪ upButtons
		@grd8: shaft(c) = SHAFT_DOWN ⇒ floor(c) ∈ floorButtons[{c}] ∪ downButtons  
	end
	
	event MotorStopsNoRequest extends MotorStops
	where 	 //stops where no floors are requested
		@grd7: shaft(c) = SHAFT_UP ⇒ floor(c) + 1 ‥ TOP_FLOOR ∩ (floorButtons[{c}] ∪ upButtons ∪ downButtons) = ∅ 
		@grd8: shaft(c) = SHAFT_DOWN ⇒ 0 ‥ floor(c) − 1 ∩ (floorButtons[{c}] ∪ upButtons ∪ downButtons) = ∅ 	
	end
	
	event DoorClosedToHalfUp extends DoorClosedToHalf
	any f
	where
		@grd6: shaft(c) = SHAFT_UP // cabin is going up
		@grd: f ∈ 0‥TOP_FLOOR
		@grd7: f = floor(c)
		@grd8: f ∈ floorButtons[{c}] ∪ upButtons // REQ 18 stop at floor and opens door if there is a request 
		
	then
		@act2: floorButtons ≔ floorButtons ∖ {c ↦ f} //clear request for up button on this cabin
		@act3: upButtons ≔ upButtons ∖ {f} //clear request for up button on this floor 
		  	
	end
	
	event DoorClosedToHalfDown extends DoorClosedToHalf
	any f
	where
		@grd6: shaft(c) = SHAFT_DOWN // cabin is going down
		@grd: f ∈ 0‥TOP_FLOOR
		@grd7: f = floor(c) 
		@grd8: f ∈ floorButtons[{c}] ∪ downButtons // REQ 18 stop at floor and opens door if there is a request 
	then
		@act2: floorButtons ≔ floorButtons ∖ {c ↦ f} //clear request for down button on this cabin
		@act3: downButtons ≔ downButtons ∖ {f} //clear request for down button on this floor
		   
	end

	event DoorHalfToOpenUp extends DoorHalfToOpen
	where 
		@grd5: shaft(c) = SHAFT_UP
	then 
		@act2: floorButtons ≔ floorButtons ∖ {c ↦ floor(c)}
		@act3: upButtons ≔ upButtons ∖ {floor(c)}	
	end
	
	event DoorHalfToOpenDown extends DoorHalfToOpen
	where 
		@grd5: shaft(c) = SHAFT_DOWN
	then 
		@act2: floorButtons ≔ floorButtons ∖ {c ↦ floor(c)}
		@act3: 	downButtons ≔ downButtons ∖ {floor(c)}
	end
	
	event DoorOpenToHalfUp extends DoorOpenToHalf
	where 
		@grd6: floor(c) ∉ floorButtons[{c}]  // no requests on current floor
		@grd7: shaft(c) = SHAFT_UP ⇒ floor(c) ∉ upButtons
		
	end
	
	event DoorOpenToHalfDown extends DoorOpenToHalf
	where 
		@grd6: floor(c) ∉ floorButtons[{c}]    // no requests on current floor
		@grd7: shaft(c) = SHAFT_DOWN ⇒ floor(c) ∉ downButtons
	end
	
	event DoorHalfToClosed extends DoorHalfToClosed 
	any 
		f	
	where
	@grd5: c ∈ cabin
	@grd6: f ∈ 0‥TOP_FLOOR
	@grd7: f = floor(c)
	@grd8: (c ↦ f) ∉ floorButtons //there are no request for the current floor
	@grd9: shaft(c) = SHAFT_UP ⇒ f ∉ upButtons 
	@grd10: shaft(c) = SHAFT_DOWN ⇒ f ∉ downButtons
	end
	
	event UserPressesUpButton
	any
		f //requested floor 
	where
		@grd1: f ∈ 0‥TOP_FLOOR − 1
		@grd2: f ∉ upButtons  //floor up button is not already requested
		@grd3: cabin ≠ ∅  
	then 
		@act1: upButtons ≔ upButtons ∪ {f}
	end
	
	event UserPressesDownButton
	any
		f //requested floor 
	where
		@grd1: f ∈ 1‥TOP_FLOOR 
		@grd2: f ∉ downButtons  //floor down button is not already requested
		@grd3: cabin ≠ ∅
	then 
		@act1: downButtons ≔ downButtons ∪ {f}
	end
	
	event  UserPressesFloorButton
	any 
		f //floor button
		c // cabin the button is pressed in
		s
		m
		d
	where
		@grd1: f ∈ 0 ‥ TOP_FLOOR  //floor button for any floor
		@grd2: c ∈ cabin
		@grd3: (c ↦ f) ∉ floorButtons  //requested floor is not the current floor
		@grd4: c ↦ s ∈ shaft
    	@grd5: c ↦ m ∈ motor
    	@grd6: c ↦ d ∈ door
	then
		@act1: floorButtons ≔ floorButtons ∪ {c ↦ f}  
	end
	
	
end
